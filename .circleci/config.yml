# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # - image: loadingdock.azurecr.io/express-server
      - image: circleci/node:8.11.2-browsers
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    # TODO: MAKE SURE ONLY FROM MASTER
    working_directory: ~/repo
    branches:
      only: 
        - master

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
        
      # run tests!
      # TODO: do we have tests?
      # - run: yarn test
      # - run: yarn ng test --watch=false --progress=false --browsers=ChromeHeadless

      # ======================= Docker Registry Login ====================================
      - setup_remote_docker
      #     docker_layer_caching: true

      # - run: docker login --username $DOCKER_USER_NAME --password $DOCKER_PASSWORD loadingdock.azurecr.io/express-server
      - run: echo $DOCKER_PASSWORD | docker login --username $DOCKER_USER_NAME --password-stdin loadingdock.azurecr.io/express-server

      # ======================= PRODUCTION-BUILD =========================================

      # Upon success build the docker file
      # - run: docker build -f server/Dockerfile -t loadingdock.azurecr.io/express-server:latest ./server/
      
      - run: cd server && docker-compose build

      # Pushing Azure container to the registry
      - run: docker push loadingdock.azurecr.io/express-server:latest

      # - run: docker push loadingdock.azurecr.io/redis:latest
      
      # - run:
      #     name: Build and push Docker image
      #     command: |
      #       docker build -t loadingdock.azurecr.io/express-server:latest .
      #       echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
      #       docker push loadingdock.azurecr.io/express-server:latest
            
